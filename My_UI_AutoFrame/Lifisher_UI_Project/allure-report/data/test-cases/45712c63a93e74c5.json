{
  "uid" : "45712c63a93e74c5",
  "name" : "测试用例标题：自动登录并下单购买领英工具",
  "fullName" : "src.test_suite.test_01.test_order.TestCaseLinder#test_login_lifisher",
  "historyId" : "77c9c81650931d6bc90d3ec38639af0f",
  "time" : {
    "start" : 1595402258942,
    "stop" : 1595402263528,
    "duration" : 4586
  },
  "description" : "这个用例用于验证下单功能是否正常",
  "descriptionHtml" : "<p>这个用例用于验证下单功能是否正常</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '支付宝' == '微信'\n  - 微信\n  + 支付宝",
  "statusTrace" : "self = <test_order.TestCaseLinder object at 0x0000000004AC29E8>\nlogin = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"30787f2c177119cec277bce634b0d013\")>\nlog_record = <Logger fmt (DEBUG)>\n\n    @allure.title(\"测试用例标题：自动登录并下单购买领英工具\")\n    @pytest.mark.run(order=1)\n    @allure.tag(\"严重级别：高\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.description(\"这个用例用于验证下单功能是否正常\")\n    def test_login_lifisher(self, login, log_record):\n    \n        # 实例化 操作层(OrderOperate)对象\n        oo = OrderOperate()\n        driver = login\n        logger = log_record\n    \n        page_title = \"小渔夫 - 外贸营销综合平台 - 企业出海，找小渔夫\"\n    \n        # 调用打开页面组件\n        with allure.step(\"1.验证测试的网页是否打开正确\"):\n            oo.open(driver,page_title)\n    \n        # 操作：点击登录后的 \"领英自动找客户\" tab元素\n        with allure.step(\"2.登录成功后，点击 领英自动找客户 tab 元素\"):\n            oo.click_ele_linder_tab_loc(driver)\n            driver.implicitly_wait(10)\n            sleep(2)\n    \n        # 1)获取元素 2）跳转到该元素 3）操作该元素\n        # 操作：获取 领英自动找客户 拳头页面的 \"立即购买\" 元素 target\n        with allure.step(\"3.获取 '立即购买' 元素 target\"):\n            target = oo.click_ele_buy_linder_loc(driver,False)\n    \n        # 操作：执行 js 脚本,跳转到指定元素上\n        with allure.step(\"4.页面跳转到 '立即购买'target 且元素与底部平行\"):\n            oo.script_dowm(target,driver)\n    \n        # 操作：直接点击'立即购买' target 跳转到订单页面\n        with allure.step(\"5.点击 '立即购买'target 跳转到订单页面\"):\n            oo.click_ele_buy_linder_loc(driver,True)\n    \n        # 操作：获取指定的元素值(支付方式)\n        with allure.step(\"6.验证指定元素对应的值是否为支付宝\"):\n            pay_stype = oo.get_pay_text(driver)\n    \n            # 验证指定元素值是否相等\n>           assert pay_stype ==\"微信\"\nE           AssertionError: assert '支付宝' == '微信'\nE             - 微信\nE             + 支付宝\n\ntest_order.py:55: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "login",
    "time" : {
      "start" : 1595402254559,
      "stop" : 1595402258938,
      "duration" : 4379
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "driver_browser",
    "time" : {
      "start" : 1595402248282,
      "stop" : 1595402254558,
      "duration" : 6276
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "log_record",
    "time" : {
      "start" : 1595402258938,
      "stop" : 1595402258940,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "这个用例用于验证下单功能是否正常",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert '支付宝' == '微信'\n  - 微信\n  + 支付宝",
    "statusTrace" : "self = <test_order.TestCaseLinder object at 0x0000000004AC29E8>\nlogin = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"30787f2c177119cec277bce634b0d013\")>\nlog_record = <Logger fmt (DEBUG)>\n\n    @allure.title(\"测试用例标题：自动登录并下单购买领英工具\")\n    @pytest.mark.run(order=1)\n    @allure.tag(\"严重级别：高\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.description(\"这个用例用于验证下单功能是否正常\")\n    def test_login_lifisher(self, login, log_record):\n    \n        # 实例化 操作层(OrderOperate)对象\n        oo = OrderOperate()\n        driver = login\n        logger = log_record\n    \n        page_title = \"小渔夫 - 外贸营销综合平台 - 企业出海，找小渔夫\"\n    \n        # 调用打开页面组件\n        with allure.step(\"1.验证测试的网页是否打开正确\"):\n            oo.open(driver,page_title)\n    \n        # 操作：点击登录后的 \"领英自动找客户\" tab元素\n        with allure.step(\"2.登录成功后，点击 领英自动找客户 tab 元素\"):\n            oo.click_ele_linder_tab_loc(driver)\n            driver.implicitly_wait(10)\n            sleep(2)\n    \n        # 1)获取元素 2）跳转到该元素 3）操作该元素\n        # 操作：获取 领英自动找客户 拳头页面的 \"立即购买\" 元素 target\n        with allure.step(\"3.获取 '立即购买' 元素 target\"):\n            target = oo.click_ele_buy_linder_loc(driver,False)\n    \n        # 操作：执行 js 脚本,跳转到指定元素上\n        with allure.step(\"4.页面跳转到 '立即购买'target 且元素与底部平行\"):\n            oo.script_dowm(target,driver)\n    \n        # 操作：直接点击'立即购买' target 跳转到订单页面\n        with allure.step(\"5.点击 '立即购买'target 跳转到订单页面\"):\n            oo.click_ele_buy_linder_loc(driver,True)\n    \n        # 操作：获取指定的元素值(支付方式)\n        with allure.step(\"6.验证指定元素对应的值是否为支付宝\"):\n            pay_stype = oo.get_pay_text(driver)\n    \n            # 验证指定元素值是否相等\n>           assert pay_stype ==\"微信\"\nE           AssertionError: assert '支付宝' == '微信'\nE             - 微信\nE             + 支付宝\n\ntest_order.py:55: AssertionError",
    "steps" : [ {
      "name" : "1.验证测试的网页是否打开正确",
      "time" : {
        "start" : 1595402258942,
        "stop" : 1595402258947,
        "duration" : 5
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "2.登录成功后，点击 领英自动找客户 tab 元素",
      "time" : {
        "start" : 1595402258947,
        "stop" : 1595402262982,
        "duration" : 4035
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "3.获取 '立即购买' 元素 target",
      "time" : {
        "start" : 1595402262983,
        "stop" : 1595402263022,
        "duration" : 39
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "4.页面跳转到 '立即购买'target 且元素与底部平行",
      "time" : {
        "start" : 1595402263022,
        "stop" : 1595402263046,
        "duration" : 24
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "5.点击 '立即购买'target 跳转到订单页面",
      "time" : {
        "start" : 1595402263047,
        "stop" : 1595402263100,
        "duration" : 53
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "6.验证指定元素对应的值是否为支付宝",
      "time" : {
        "start" : 1595402263100,
        "stop" : 1595402263528,
        "duration" : 428
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert '支付宝' == '微信'\n  - 微信\n  + 支付宝\n",
      "statusTrace" : "  File \"E:\\my_frame\\Lifisher_UI_Project\\src\\test_suite\\test_01\\test_order.py\", line 55, in test_login_lifisher\n    assert pay_stype ==\"微信\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    }, {
      "name" : "添加失败步骤截图~~~",
      "time" : {
        "start" : 1595402263545,
        "stop" : 1595402263879,
        "duration" : 334
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "1e05287279080dd6",
        "name" : "失败截图：..\\..\\..\\screen-shoots\\2020-07-22\\2020-07-22 15-17-43.png",
        "source" : "1e05287279080dd6.png",
        "type" : "image/png",
        "size" : 59335
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ {
      "uid" : "99d3ae40b3e1e099",
      "name" : "log",
      "source" : "99d3ae40b3e1e099.txt",
      "type" : "text/plain",
      "size" : 7988
    } ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "hasContent" : true,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "driver_browser::0",
    "time" : {
      "start" : 1595402263918,
      "stop" : 1595402274123,
      "duration" : 10205
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "tag",
    "value" : "严重级别：高"
  }, {
    "name" : "feature",
    "value" : "po登录特性模块"
  }, {
    "name" : "epic",
    "value" : "小渔夫建站工具订购大模块"
  }, {
    "name" : "tag",
    "value" : "run(order=1)"
  }, {
    "name" : "parentSuite",
    "value" : "src.test_suite.test_01"
  }, {
    "name" : "suite",
    "value" : "test_order"
  }, {
    "name" : "subSuite",
    "value" : "TestCaseLinder"
  }, {
    "name" : "host",
    "value" : "MS-20190406TZWL"
  }, {
    "name" : "thread",
    "value" : "7248-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "src.test_suite.test_01.test_order"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "run(order=1)", "严重级别：高" ]
  },
  "source" : "45712c63a93e74c5.json",
  "parameterValues" : [ ]
}