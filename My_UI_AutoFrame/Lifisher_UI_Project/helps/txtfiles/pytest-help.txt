usage: pytest [options] [file_or_dir] [file_or_dir] [...]

positional arguments:
  file_or_dir

general:
  -k EXPRESSION         only run tests which match the given substring
                        expression. An expression is a python evaluatable
                        expression where all names are substring-matched against
                        test names and their parent classes. Example: -k
                        'test_method or test_other' matches all test functions
                        and classes whose name contains 'test_method' or
                        'test_other', while -k 'not test_method' matches those
                        that don't contain 'test_method' in their names. -k 'not
                        test_method and not test_other' will eliminate the
                        matches. Additionally keywords are matched to classes
                        and functions containing extra names in their
                        'extra_keyword_matches' set, as well as functions which
                        have names assigned directly to them. The matching is
                        case-insensitive.
						只运行与给定子字符串匹配的测试
						表达式。表达式是python可求值的
						表达式，其中所有名称都对其进行减法匹配
						测试名称及其父类。例子:- k
						'test_method或test_other'匹配所有测试函数
						以及名称包含'test_method'或的类
						'test_other'，而-k 'not test_method'匹配这些
						它们的名称中不包含'test_method'。- k“not
						test_method而不是test_other'将消除
						匹配。另外，关键字被匹配到类
						和函数中包含额外名称
						“extra_keyword_matches”集，以及其中的函数
						将名称直接分配给它们。匹配的是
						不区分大小写的。

  -m MARKEXPR           only run tests matching given mark expression. example:
                        -m 'mark1 and not mark2'.
						只运行匹配给定标记表达式的测试。例子:
						-m 'mark1，and not mark2'
  --markers             show markers (builtin, plugin and per-project ones).
						显示标记(内置、插件和每个项目的标记)。
  -x, --exitfirst       exit instantly on first error or failed test.
						第一次出现错误或测试失败时立即退出。
  --maxfail=num         exit after first num failures or errors.
						在第一次num失败或错误后退出。
  --strict-markers, --strict
                        markers not registered in the `markers` section of the
                        configuration file raise errors.
						未在“标记”部分注册的标记
						配置文件引发错误。
  -c file               load configuration from `file` instead of trying to
                        locate one of the implicit configuration files.
						从“file”加载配置，而不是尝试
						定位一个隐式配置文件。
  --continue-on-collection-errors
                        Force test execution even if collection errors occur.
						即使发生了收集错误，也强制执行测试。
  --rootdir=ROOTDIR     Define root directory for tests. Can be relative path:
                        'root_dir', './root_dir', 'root_dir/another_dir/';
                        absolute path: '/home/user/root_dir'; path with
                        variables: '$HOME/root_dir'.
						为测试定义根目录。可相对路径:
						“root_dir”、“./root_dir”、“root_dir / another_dir /”;
						绝对路径:/home/user/root_dir”;路径与
						变量:“$ HOME/root_dir”。
						
  --fixtures, --funcargs
                        show available fixtures, sorted by plugin appearance
                        (fixtures with leading '_' are only shown with '-v')
						显示可用的fixture，按插件外观排序
						(前导为_的fixture只显示为-v)
  --fixtures-per-test   show fixtures per test
						显示每次测试的夹具
  --import-mode={prepend,append}
                        prepend/append to sys.path when importing test modules,
                        default is to prepend.
						预先考虑/附加系统路径，在导入测试模块时，
						默认是提前
  --pdb                 start the interactive Python debugger on errors or
                        KeyboardInterrupt.
						在出现错误或错误时启动交互式Python调试器
						KeyboardInterrupt
  --pdbcls=modulename:classname
                        start a custom interactive Python debugger on errors.
                        For example:
                        --pdbcls=IPython.terminal.debugger:TerminalPdb
						在出现错误时启动自定义交互式Python调试器。
						例如:
						——pdbcls = IPython.terminal.debugger: TerminalPdb
  --trace               Immediately break when running each test.
						在运行每个测试时立即中断。
  --capture=method      per-test capturing method: one of fd|sys|no|tee-sys.
						每测试捕获方法:fd|sys|no|tee-sys的一种。
  -s                    shortcut for --capture=no.
						快捷——捕获= no
  --runxfail            report the results of xfail tests as if they were not
                        marked
						报告xfail测试的结果，就像它们没有一样标志着
  --lf, --last-failed   rerun only the tests that failed at the last run (or all
                        if none failed)
						只重新运行上次运行失败的测试(或全部失败的测试)
						如果没有失败)
  --ff, --failed-first  run all tests but run the last failures first. This may
                        re-order tests and thus lead to repeated fixture
                        setup/teardown
						运行所有测试，但首先运行最后的失败。这可能
						重新安排测试，从而导致重复使用fixture
						测试前执行/测试后执行
  --nf, --new-first     run tests from new files first, then the rest of the
                        tests sorted by file mtime
						首先从新文件运行测试，然后运行其余的
						试按文件时时排序
  --cache-show=[CACHESHOW]
                        show cache contents, don't perform collection or tests.
                        Optional argument: glob (default: '*').
						显示缓存内容，不执行收集或测试。
						可选参数: glob (default: '*').
  --cache-clear         remove all cache contents at start of test run.
						在测试运行开始时删除所有缓存内容。
  --lfnf={all,none}, --last-failed-no-failures={all,none}
                        which tests to run with no previously (known) failures.
						运行之前没有(已知)失败的测试。
  --sw, --stepwise      exit on test failure and continue from last failing test
                        next time
						在测试失败时退出，并从最后一个失败的测试继续下次
  --stepwise-skip       ignore the first failing test but stop on the next
                        failing test
						忽略第一个失败的测试，但是在下一个测试中停止失败的测试
  --allure-severities=SEVERITIES_SET
                        Comma-separated list of severity names. Tests only with
                        these severities will be run. Possible values are:
                        blocker, critical, normal, minor, trivial.
						以逗号分隔的严重性名称列表。测试只有
						这些严厉措施将被执行。可能的值是:
						阻塞，严重的，正常的，次要的，不重要的
  --allure-epics=EPICS_SET
                        Comma-separated list of epic names. Run tests that have
                        at least one of the specified feature labels.
  --allure-features=FEATURES_SET
                        Comma-separated list of feature names. Run tests that
                        have at least one of the specified feature labels.
						以逗号分隔的史诗名称列表。运行以下测试
						至少一个指定的特征标签。
  --allure-stories=STORIES_SET
                        Comma-separated list of story names. Run tests that have
                        at least one of the specified story labels.
						以逗号分隔的故事名称列表。运行以下测试
						至少一个指定的故事标签
  --allure-link-pattern=LINK_TYPE:LINK_PATTERN
                        Url pattern for link type. Allows short links in test,
                        like 'issue-1'. Text will be formatted to full url with
                        python str.format().
						链接类型的Url模式。允许短链接在测试中，
						像“一号”。文本将格式化为完整的url
						python str.format ()。

reporting:
  --durations=N         show N slowest setup/test durations (N=0 for all).
						显示N个最慢的设置/测试持续时间(N=0)。
  -v, --verbose         increase verbosity.
						增加冗长
  -q, --quiet           decrease verbosity.
						减少冗长
  --verbosity=VERBOSE   set verbosity. Default is 0.
						设置冗长。默认是0
  -r chars              show extra test summary info as specified by chars:
                        (f)ailed, (E)rror, (s)kipped, (x)failed, (X)passed,
                        (p)assed, (P)assed with output, (a)ll except passed
                        (p/P), or (A)ll. (w)arnings are enabled by default (see
                        --disable-warnings), 'N' can be used to reset the list.
                        (default: 'fE').
						显示chars指定的额外测试摘要信息:
						(f)失败的，(E)失败的，(s)失败的，(x)通过的，
						(p)通过，(p)通过输出，(a)除了通过
						(p / p)或(A)会。默认情况下是启用的(参见
						——disable-warnings)， 'N'可用于重置列表。
						(默认:“fE”)。
  --disable-warnings, --disable-pytest-warnings
                        disable warnings summary
						禁用警告概要
  -l, --showlocals      show locals in tracebacks (disabled by default).
						在回溯中显示局部变量(默认禁用)。
  --tb=style            traceback print mode (auto/long/short/line/native/no).
						回溯打印模式(自动/长/短/行/本机/no)。
  --show-capture={no,stdout,stderr,log,all}
                        Controls how captured stdout/stderr/log is shown on
                        failed tests. Default is 'all'.
						控制如何显示捕获的stdout/stderr/日志
						失败的测试。默认是“所有”。
  --full-trace          don't cut any tracebacks (default is to cut).
						不要削减任何回溯(默认是削减)
  --color=color         color terminal output (yes/no/auto).
						彩色终端输出(是/否/自动)。
  --pastebin=mode       send failed|all info to bpaste.net pastebin service.
						发送失败的|所有信息到bpastebin服务
  --junit-xml=path      create junit-xml style report file at given path.
						在给定的路径上创建junit-xml风格的报告文件。
  --junit-prefix=str    prepend prefix to classnames in junit-xml output
						在junit-xml输出中在类名前添加前缀
  --result-log=path     DEPRECATED path for machine-readable result log.
						机器可读的结果日志的弃用的路径。
  --html=path           create html report file at given path.
						创建html报告文件在给定的路径。
  --self-contained-html
                        create a self-contained html file containing all
                        necessary styles, scripts, and images - this means that
                        the report may not render or function where CSP
                        restrictions are in place (see
                        https://developer.mozilla.org/docs/Web/Security/CSP)
						创建一个包含所有内容的自包含html文件
						必要的样式、脚本和图像——这意味着
						报告可能无法在CSP处呈现或发挥作用
						限制已经到位(见
						https://developer.mozilla.org/docs/Web/Security/CSP)
						
  --css=path            append given css file content to report style file.
						将给定的css文件内容附加到报表样式文件中

collection:
  --collect-only, --co  only collect tests, don't execute them.
						只收集测试，不执行它们。
  --pyargs              try to interpret all arguments as python packages.
						尝试将所有参数解释为python包。
  --ignore=path         ignore path during collection (multi-allowed).
						在收集期间忽略路径(允许多个)。
  --ignore-glob=path    ignore path pattern during collection (multi-allowed).
						在收集期间忽略路径模式(允许多个)
  --deselect=nodeid_prefix
                        deselect item (via node id prefix) during collection
                        (multi-allowed).
						在收集期间取消选择项目(通过节点id前缀)允许多个
  --confcutdir=dir      only load conftest.py's relative to specified dir.
						只加载conftest。相对于指定的dir。
  --noconftest          Don't load any conftest.py files.
						不要加载任何conftest.py文件。
  --keep-duplicates     Keep duplicate tests.
						不断重复的测试。
  --collect-in-virtualenv
                        Don't ignore tests in a local virtualenv directory
						不要忽略本地virtualenv目录中的测试
  --doctest-modules     run doctests in all .py modules
						在所有.py模块中运行doctest
  --doctest-report={none,cdiff,ndiff,udiff,only_first_failure}
                        choose another output format for diffs on doctest
                        failure
						为doctest上的diffs选择另一种输出格式失败
  --doctest-glob=pat    doctests file matching pattern, default: test*.txt
						文档测试文件匹配模式，默认:test*.txt
  --doctest-ignore-import-errors
                        ignore doctest ImportErrors
						忽略doctest ImportErrors
  --doctest-continue-on-failure
                        for a given doctest, continue to run after the first
                        failure
						对于给定的doctest，在第一个doctest之后继续运行失败

test session debugging and configuration:
  --basetemp=dir        base temporary directory for this test run.(warning:
                        this directory is removed if it exists)
						此测试运行的基本临时目录。
						如果该目录存在，则删除该目录)
  -V, --version         display pytest version and information about plugins.
						显示pytest版本和关于插件的信息。
  -h, --help            show help message and configuration info
						显示帮助信息和配置信息
  -p name               early-load given plugin module name or entry point
                        (multi-allowed). To avoid loading of plugins, use the
                        `no:` prefix, e.g. `no:doctest`.
						提前加载给定的插件模块名或入口点
						(multi-allowed)。要避免加载插件，请使用
						“no:”前缀,如。no:doctest。
  --trace-config        trace considerations of conftest.py files.
						对conftest.py文件的跟踪考虑。
  --debug               store internal tracing debug information in
                        'pytestdebug.log'.
						将内部跟踪调试信息存储在'pytestdebug.log'.
  -o OVERRIDE_INI, --override-ini=OVERRIDE_INI
                        override ini option with "option=value" style, e.g. `-o
                        xfail_strict=True -o cache_dir=cache`.
						使用“option=value”样式重写ini选项，例如:“- o
						xfail_strict = True - o cache_dir =cache”。
  --assert=MODE         Control assertion debugging tools. 'plain' performs no
                        assertion debugging. 'rewrite' (the default) rewrites
                        assert statements in test modules on import to provide
                        assert expression information.
						控制断言调试工具。“纯”执行
						断言调试。“rewrite”(默认值)重写
						assert语句在导入测试模块中提供
						断言表达式信息
  --setup-only          only setup fixtures, do not execute tests.  只设置fixture，不执行测试。
  --setup-show          show setup of fixtures while executing tests.  在执行测试时显示fixture的设置。显示前置执行过程日志
  --setup-plan          show what fixtures and tests would be executed but don't
                        execute anything.
						显示将执行但没有执行的fixture和测试执行任何东西。

pytest-warnings:
  -W PYTHONWARNINGS, --pythonwarnings=PYTHONWARNINGS
                        set which warnings to report, see -W option of python
                        itself.
						设置要报告的警告，请参阅python的-W选项本身。
logging:
  --no-print-logs       disable printing caught logs on failed tests.
						在失败的测试中禁用打印捕获的日志。
  --log-level=LEVEL     level of messages to catch/display. Not set by default,
                        so it depends on the root/parent log handler's effective
                        level, where it is "WARNING" by default.
						要捕获/显示的消息级别。默认没有设置，
						因此，它取决于根/父日志处理程序的有效性
						级别，默认为“警告”。
  --log-format=LOG_FORMAT
                        log format as used by the logging module.
						日志模块使用的日志格式。
  --log-date-format=LOG_DATE_FORMAT
                        log date format as used by the logging module.
						日志模块使用的日志日期格式。
  --log-cli-level=LOG_CLI_LEVEL
                        cli logging level.
						cli日志级别。
  --log-cli-format=LOG_CLI_FORMAT
                        log format as used by the logging module.
						日志模块使用的日志格式。
  --log-cli-date-format=LOG_CLI_DATE_FORMAT
                        log date format as used by the logging module.
						日志模块使用的日志日期格式。
  --log-file=LOG_FILE   path to a file when logging will be written to.
						日志记录将写入到的文件的路径。
  --log-file-level=LOG_FILE_LEVEL
                        log file logging level.
						日志文件日志级别。
  --log-file-format=LOG_FILE_FORMAT
                        log format as used by the logging module.
						日志模块使用的日志格式。
  --log-file-date-format=LOG_FILE_DATE_FORMAT
                        log date format as used by the logging module.
						日志模块使用的日志日期格式。
  --log-auto-indent=LOG_AUTO_INDENT
                        Auto-indent multiline messages passed to the logging
                        module. Accepts true|on, false|off or an integer.
						自动缩进传递给日志记录的多行消息
						模块。接受true|on, false|off或整数。

reporting:
  --alluredir=DIR       Generate Allure report in the specified directory (may
                        not exist)
						在指定目录中生成详细报告（可能不存在)
  --clean-alluredir     Clean alluredir folder if it exists
						清理alluredir文件夹(如果存在)
  --allure-no-capture   Do not attach pytest captured logging/stdout/stderr to
                        report
						不附加pytest捕获的日志/stdout/stderr到报告

coverage reporting with distributed testing support:
  --cov=[SOURCE]        Path or package name to measure during execution (multi-
                        allowed). Use --cov= to not do any source filtering and
                        record everything.
						执行期间要度量的路径或包名(
						允许多个)。使用——cov=不做任何源过滤和
						记录一切。
  --cov-report=TYPE     Type of report to generate: term, term-missing,
                        annotate, html, xml (multi-allowed). term, term-missing
                        may be followed by ":skip-covered". annotate, html and
                        xml may be followed by ":DEST" where DEST specifies the
                        output location. Use --cov-report= to not generate any
                        output.
						要生成的报告类型:term，缺少term，
						注释，html, xml(多允许)。项,term-missing
						后面可能会加上“:跳过的”。注释,html和
						xml后面可以跟着“:DEST”，其中DEST指定
						输出的位置。使用——cov-report=不生成任何
						输出
  --cov-config=PATH     Config file for coverage. Default: .coveragerc
						用于覆盖的配置文件。默认值:.coveragerc
  --no-cov-on-fail      Do not report coverage if test run fails. Default: False
						如果测试运行失败，不要报告覆盖率。默认值:假
  --no-cov              Disable coverage report completely (useful for
                        debuggers). Default: False
						完全禁用覆盖报告（有用的调试器)。默认值:假
  --cov-fail-under=MIN  Fail if the total coverage is less than MIN.
						如果总覆盖率小于最小值，则失败。
  --cov-append          Do not delete coverage but append to current. Default:
                        False
						不删除覆盖，但追加到当前。默认值:假
  --cov-branch          Enable branch coverage.
						使分支覆盖。
  --cov-context=CONTEXT
                        Dynamic contexts to use. "test" for now.
						使用动态上下文。“测试”。

forked subprocess test execution:
  --forked              box each test run in a separate process (unix)
						在单独进程中运行的每个测试(unix)

re-run failing tests to eliminate flaky failures:
  --reruns=RERUNS       number of times to re-run failed tests. defaults to 0.
						重新运行失败测试的次数。默认值为0。
  --reruns-delay=RERUNS_DELAY
                        add time (seconds) delay between reruns.
						增加两次运行之间的时间(秒)延迟。

distributed and subprocess testing:
  -n numprocesses, --numprocesses=numprocesses
                        shortcut for '--dist=load --tx=NUM*popen', you can use
                        'auto' here for auto detection CPUs number on host
                        system and it will be 0 when used with --pdb
						快捷方式'——dist=load——tx=NUM*popen'，你可以使用
						'自动'这里为自动检测cpu数量上的主机
						当与—pdb一起使用时，它将为0
  --maxprocesses=maxprocesses
                        limit the maximum number of workers to process the tests
                        when using --numprocesses=auto
						限制处理测试的最大工作者数量
						当使用——numprocesses =自动
  --max-worker-restart=MAXWORKERRESTART, --max-slave-restart=MAXWORKERRESTART
                        maximum number of workers that can be restarted when
                        crashed (set to zero to disable this feature) '--max-
                        slave-restart' option is deprecated and will be removed
                        in a future release
						可以重新启动的最大工人数量
						崩溃(设置为0禁用此功能)”——马克思
						slave-restart'选项已被弃用，将被删除
						在未来的版本中
  --dist=distmode       set mode for distributing tests to exec environments.
                        each: send each test to all available environments.
                        load: load balance by sending any pending test to any
                        available environment. loadscope: load balance by
                        sending pending groups of tests in the same scope to any
                        available environment. loadfile: load balance by sending
                        test grouped by file to any available environment.
                        (default) no: run tests inprocess, don't distribute.
						用于将测试分发到exec环境的et模式。
						each:将每个测试发送到所有可用的环境。
						负载:通过发送任何挂起的测试来实现负载平衡
						可用的环境。加载范围:负载平衡
						将同一作用域中的挂起测试组发送给任何
						可用的环境。通过发送来平衡负载
						测试按文件分组到任何可用的环境。
						(默认)否:在进程中运行测试，而不是分发
  --tx=xspec            add a test execution environment. some examples: --tx
                        popen//python=python2.5 --tx socket=192.168.1.102:8888
                        --tx ssh=user@codespeak.net//chdir=testcache
						添加测试执行环境。一些例子:- tx
						popen / / python = = 192.168.1.102:8888 python2.5 - tx插座
						——tx ssh = user@codespeak.net//chdir=testcache
						
  -d                    load-balance tests. shortcut for '--dist=load'
						负载平衡测试。快捷方式”——dist =负载的
  --rsyncdir=DIR        add directory for rsyncing to remote tx nodes.
						添加用于同步到远程tx节点的目录。
  --rsyncignore=GLOB    add expression for ignores when rsyncing to remote tx
                        nodes.
						添加表达式，用于在同步到远程tx时忽略节点。
  --boxed               backward compatibility alias for pytest-forked --forked
						pytest-forked的向后兼容性别名——forked
  --testrunuid=TESTRUNUID
                        provide an identifier shared amongst all workers as the
                        value of the 'testrun_uid' fixture, ,if not provided,
                        'testrun_uid' is filled with a new unique string on
                        every test run.
						提供一个在所有worker之间共享的标识符
						“testrun_uid”fixture的值，如果没有提供，
						'testrun_uid'填充一个新的唯一字符串
						每一个测试运行。
  -f, --looponfail      run tests in subprocess, wait for modified files and re-
                        run failing test set until all pass.
						在子进程中运行测试，等待修改的文件并重新执行
						运行失败测试集，直到全部通过。

custom options:
  --metadata=key value  additional metadata.
						额外的元数据。

[pytest] ini-options in the first pytest.ini|tox.ini|setup.cfg file found:

  markers (linelist):   markers for test functions
						测试函数的标记
  empty_parameter_set_mark (string):
                        default marker for empty parametersets
						空参数集的默认标记
  norecursedirs (args): directory patterns to avoid for recursion
						避免递归的目录模式
  testpaths (args):     directories to search for tests when no files or
                        directories are given in the command line.
						当没有文件或目录在命令行中给出。
  usefixtures (args):   list of default fixtures to be used with this project
						与此项目一起使用的默认fixture列表
  python_files (args):  glob-style file patterns for Python test module
                        discovery
						Python测试模块的全局样式文件模式发现
  python_classes (args):
                        prefixes or glob names for Python test class discovery
						用于Python测试类发现的前缀或通配符名称
  python_functions (args):
                        prefixes or glob names for Python test function and
                        method discovery
						Python测试函数和的前缀或全局名方法发现
  disable_test_id_escaping_and_forfeit_all_rights_to_community_support (bool):
                        disable string escape non-ascii characters, might cause
                        unwanted side effects(use at your own risk)
						禁用字符串转义非ascii字符，可能导致副作用(风险自负)
  console_output_style (string):
                        console output: "classic", or with additional progress
                        information ("progress" (percentage) | "count").
						控制台输出:“经典”，或附加进程
						信息(“进度”(百分比)|“计数”)。
  xfail_strict (bool):  default for the strict parameter of xfail markers when
                        not given explicitly (default: False)
						时为xfail标记的严格参数的默认值未明确给出(默认:False)
  enable_assertion_pass_hook (bool):
                        Enables the pytest_assertion_pass hook.Make sure to
                        delete any previously generated pyc cache files.
						启用pytest_assertion_pass钩子。一定要
						删除任何以前生成的pyc缓存文件
  junit_suite_name (string):
                        Test suite name for JUnit report
						JUnit报告的测试套件名称
  junit_logging (string):
                        Write captured log messages to JUnit report: one of
                        no|log|system-out|system-err|out-err|all
						将捕获的日志消息写入JUnit report:其中之一
						没有|日志|系统| system-err | out-err |
  junit_log_passing_tests (bool):
                        Capture log information for passing tests to JUnit
                        report:
						捕获日志信息，以便将测试传递给JUnit报告:
  junit_duration_report (string):
                        Duration time to report: one of total|call
						持续时间报告:总|呼叫 之一
  junit_family (string):
                        Emit XML for schema: one of legacy|xunit1|xunit2
						为模式发出XML:遗留的|xunit1|xunit2
  doctest_optionflags (args):
                        option flags for doctests
						doctests的选项标志
  doctest_encoding (string):
                        encoding used for doctest files
						用于doctest文件的编码
  cache_dir (string):   cache directory path.缓存目录路径。
  filterwarnings (linelist):
                        Each line specifies a pattern for
                        warnings.filterwarnings. Processed after
                        -W/--pythonwarnings.
						
						每一行指定一个模式
						warnings.filterwarnings。处理后
						- w /——pythonwarnings。
  log_print (bool):     default value for --no-print-logs默认值为——不打印日志
  log_level (string):   default value for --log-level默认值为——日志级别
  log_format (string):  default value for --log-format 默认值为——日志格式
  log_date_format (string):
                        default value for --log-date-format默认值为——日志日期格式
  log_cli (bool):       enable log display during test run (also known as "live
                        logging").
						在测试运行期间启用日志显示(也称为“live”)日志记录”)。
  log_cli_level (string):
                        default value for --log-cli-level 默认值为——log-cli-level
  log_cli_format (string):
                        default value for --log-cli-format 默认值为——log- click -format
  log_cli_date_format (string):
                        default value for --log-cli-date-format 默认值为——log-cli-date-format
  log_file (string):    default value for --log-file 默认值为——log-file
  log_file_level (string):
                        default value for --log-file-level 默认值为——日志文件级
  log_file_format (string):
                        default value for --log-file-format 默认值为——日志文件格式
  log_file_date_format (string):
                        default value for --log-file-date-format 默认值为——log-file-date-format
  log_auto_indent (string):
                        default value for --log-auto-indent 默认值——日志自动缩进
  faulthandler_timeout (string):
                        Dump the traceback of all threads if a test takes more
                        than TIMEOUT seconds to finish. Not available on
                        Windows.
						如果测试占用更多时间，则转储所有线程的回溯
						比超时秒结束。没有可用的
						窗户
  addopts (args):       extra command line options 额外的命令行选项
  minversion (string):  minimally required pytest version 最低要求的pytest版本
  rsyncdirs (pathlist): list of (relative) paths to be rsynced for remote
                        distributed testing.
						用于远程同步的(相对)路径列表分布式测试。
  rsyncignore (pathlist):
                        list of (relative) glob-style paths to be ignored for
                        rsyncing.
						要忽略的(相对)全局样式路径列表rsync。
  looponfailroots (pathlist):
                        directories to check for changes 要检查更改的目录

environment variables:
  PYTEST_ADDOPTS           extra command line options 额外的命令行选项
  PYTEST_PLUGINS           comma-separated plugins to load during startup 在启动时要加载的逗号分隔插件
  PYTEST_DISABLE_PLUGIN_AUTOLOAD set to disable plugin auto-loading 设置为禁用插件自动加载
  PYTEST_DEBUG             set to enable debug tracing of pytest's internals 设置为启用pytest内部的调试跟踪


to see available markers type: pytest --markers
	要查看可用的标记类型:pytest --markers
to see available fixtures type: pytest --fixtures
	查看可用的固定装置类型：pytest --fixtures
(shown according to specified file_or_dir or current dir if not specified; fixtures with leading '_' are only shown with the '-v' option
